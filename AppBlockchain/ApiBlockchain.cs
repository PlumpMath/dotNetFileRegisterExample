using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AStar;

namespace AppBlockchain
{
    public class ApiBlockchain
    {
        
        // Api
        AStar.Api.SearchApi search;
        AStar.Api.SendApi send;

        // ApiClient
        AStar.Client.ApiClient client;

        // Model
        AStar.Model.ServerInfo server_info;
        AStar.Model.SingleResult singleresult;
        //AStar.Model.Transaction transaction;

        // Util
        AStar.Util.Token token;

        public int Token()
        {
            //AStar.Util.Token.sign
            return 0;
        }

        public void Registrar()
        {
            //client = new AStar.Client.ApiClient();
            send = new AStar.Api.SendApi();

            string token = "";
            int account = 0;
            string user = "";
            string pass = "";
            string base64 = "";
            string coin = "";
            int test = 0;

            send.SendFile(token, account, user, pass, base64, coin, test);
        }

        public string Validar()
        {
            
            String token = "2d2d2d2d2d424547494e205253412050524956415445204b45592d2d2d2d2d0a4d4949456f77494241414b4341514541796a45375863327678533251673658665a69447a6f472f412b326971785a6f30674d412f3555742b78596635343048690a41554c70754a4739686d55346a3837456b547537316e4e7532644f34356237583462346c6141665a64396e6635745a44747332737654586b7174434d684e6e720a302b58794254695a4e343541475552743354414c726b53676366555a67424b53686843612f70436a4b344445524d566a76326d5467397a7253505539526256780a7350786577316f584b773275786761744d47776b6c71316c5156782b50742b5453364c49356e38744249376d43382b503347646f61645a77796c345868525a710a3730752f45756a3545784f357a77766f4a413159507351446254326b626d66744a5952375045666242792f6b786d6b71472b6b7248545a4575714d416a6b63540a326248414f714a78696149726a63472f6258773669725a42516d4f50614d51356c386f7a4877494441514142416f4942414678786e66384a5a2b2f7a495476500a7678426d79487a3247336e584a5230726f41327432496a787434694133784f30723678373933685879687545644250734b5a7474674468516c7349704e30527a0a755369525533443542636a79614a69574a6d65534b67526f6536424e7362476349574c456f353858665a5956422b47466b2b5770626533446d73662f6c43556d0a574b2f4c4c394a734e753551395775734243736b446a6f6636384e79374351496166314c5855574a782f44336e7031315059416c3843344e6a462b794355544f0a64596f37794b47792b7179636b39566854694d4e7867304267735a414972684f3653742b514b312b4b2b753433506d73384f785841416d626c4f7a486a5031690a5a7638754879507263726e6b315863654d7a624730522b366833732b65507761687a4944353562316d564f53304845484c6261502f3443454b6a3772444166360a4e67576475634543675945417a3674746d7258673472645a33694e722f45657766416c613338657278527574563648506575326e6272625063396c49784b73330a57686f30324e734d6256676d515936335957597a7744366b74495933655049694b784950524d345a2f4c7a795655676b5a306b6e75677247747076736d7536740a7554354f6a4d6e6355526938387a636366344676736a4a66757a6a7a53714e326533717177546547495371705a6a54715a38346776426343675945412b5439350a67784636344a302f2b7232644878636870416a754d2f36793733314a58785256616a56776c486d623357573337566a6c527671342f6b4a477953355373454f6f0a3442682b68466d364d507941555953785643546b504b59764e31444f6c3458534274493874715a3244424e4e5264672f5a7673632f704b74374c2b4c6c7a5a430a746d6c306c622b507864712f437677305952355866504672424c465562744c7969327962666a6b43675945416f4d546d4a552b49756675583578456c47446d6e0a7431374771316534387539715574314238726a7056687a516e61387056706632556872587273706c3549444a6e526350674b664f694a58326a49736268745a730a2f55734e35775a6e742f484f365a6267463958616d3379634f654b63575a564e6949746a3544716942575a5259546a5a4a787a64692b62546c653251363865410a676a6545326642534e6e734169632b4e614b393753434543675942616d30694137516e4f5056765575726b7a5a4356476a44694c6a6a7464394232494173784b0a48384d644e6c674330386459384d666f565a794b5557324b464e7a61567234394f4b704655706a7331643250784c7a783662644f6c4e72314d4e7270476979500a626a33443642396870474b6930556d374665346b58513338306d546351303164496c6a50567950637550685a396654556d554d556d473565396c664c4d6351610a4378453767514b426747617569584447647741415437526e36716a6f447158444731667555524b464c61583875613056727379764d6b497854597378645630530a7978634342396c464e4b495a632f67793473337732372b6c6a4c774c722b5173674d37356e4e74766f743435725365387a664c63313161524a594946546e724a0a6f2f33686f3248792b4a66434934555a66597633716e72627766737176552b73595256447265584b4b2f524f694578454c7154690a2d2d2d2d2d454e44205253412050524956415445204b45592d2d2d2d2d0a";
            int account = 16;
            string user = "leonardo.luzzatto@smlbrasil.com.br";
            string pass = "870152184E";
            string hash = "ff8968fcc0520ebdc504a81925ab848a9e45e0c1ddd1b0a186813955312afdc7"; 
            
            search = new AStar.Api.SearchApi();
            
            // search.SearchByHash(AStar.Util.Token.sign(token), account, user, pass, hash);
            AStar.Model.Transaction transaction = search.SearchByAPIID(AStar.Util.Token.sign(token), account, user, pass, 333);
            return transaction.Data; // Retorna o HASH
        }
    }
}

